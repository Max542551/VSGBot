from aiogram import types
from aiogram.dispatcher.filters import state

from database.get_to_db import get_taxi, get_user
from handlers.user_handlers import main_menu_user
from loader import bot, dp
from states.user_states import UserRegistrationState


@dp.callback_query_handler(lambda c: c.data == 'switch_to_passenger')
async def process_callback_switch_to_passenger(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    user_id = callback_query.from_user.id
    taxi = await get_taxi(user_id)

    user = await get_user(user_id)  # –ø—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∞–∫ –ø–∞—Å—Å–∞–∂–∏—Ä
    if user:
        if taxi:
            taxi.is_active = False  # –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ç–∞–∫—Å–∏—Å—Ç–∞
            taxi.save()

        # –µ—Å–ª–∏ –¥–∞, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤
        await bot.edit_message_text('üîÄ –í—ã —Å–º–µ–Ω–∏–ª–∏ —Ä–æ–ª—å –Ω–∞ –ø–∞—Å—Å–∞–∂–∏—Ä. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!',
                                    chat_id=callback_query.from_user.id,
                                    message_id=callback_query.message.message_id)
        await main_menu_user.main_menu(callback_query.message)

    else:
        # –µ—Å–ª–∏ –Ω–µ—Ç, –Ω–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–∞—Å—Å–∞–∂–∏—Ä–∞
        await bot.edit_message_text('üôã‚Äç‚ôÇÔ∏è–í–∞–º –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–∞—Å—Å–∞–∂–∏—Ä–∞!\n\n'
                                    'üîÜ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:', chat_id=callback_query.from_user.id,
                                    message_id=callback_query.message.message_id)
        await UserRegistrationState.name.set()
