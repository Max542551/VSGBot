from aiogram import types
from aiogram.dispatcher import FSMContext

from database.get_to_db import get_taxi
from handlers.taxi_handlers import main_menu_taxi
from loader import bot, dp


@dp.callback_query_handler(lambda call: call.data == 'towatch', state="*")
async def toggle_watch_mode(call: types.CallbackQuery, state: FSMContext):
    taxi_id = call.from_user.id
    taxi = await get_taxi(taxi_id)

    if taxi is None:
        await bot.send_message(call.message.chat.id, "‚ö†Ô∏è –¢–∞–∫—Å–∏—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    if taxi.shift:
        await bot.answer_callback_query(call.id, show_alert=True,
                                        text="‚ö†Ô∏è –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è, –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Å–º–µ–Ω—É!\n\n")
        return

    # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –Ω–∞–±–ª—é–¥–µ–Ω–∏—è
    taxi.is_watching = not taxi.is_watching
    taxi.save()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ —Å—Ç–∞—Ç—É—Å–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è
    watch_status = "–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ" if taxi.is_watching else "–¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"
    await bot.edit_message_text(chat_id=call.from_user.id,
                           message_id=call.message.message_id, text=f"üëÅÔ∏è –†–µ–∂–∏–º –Ω–∞–±–ª—é–¥–µ–Ω–∏—è {watch_status}.")
    await main_menu_taxi.main_menu_taxi(call.message)
    await bot.answer_callback_query(call.id)
