from aiogram import types
from aiogram.types import InlineKeyboardMarkup

from database.add_to_db import create_sent_item, delivery_create_sent_item
from database.database import Delivery
from database.get_to_db import get_delivery_by_taxi_id, get_delivery_orders_buttons, get_user, get_taxi, get_order_by_taxi_id, get_free_taxis_count, \
    get_deferred_orders_buttons
from database.update_to_db import update_sent_item
from keyboards.inline.delivery_inline.delivery_status_buttons.get_package_delivery import get_delivery_package_button
from keyboards.inline.delivery_inline.delivery_status_buttons.leaving_with_package import get_leaving_with_package_button
from keyboards.inline.orders_inline.taxi_order_inline.end_trip import get_end_trip_button
from keyboards.inline.orders_inline.taxi_order_inline.expectation_order import get_expectation_button
from keyboards.inline.orders_inline.taxi_order_inline.start_trip import get_start_trip_button
from keyboards.inline.taxi_inline.markup_main_taxi import markup_taxi
from states.delivery_states import DeliveryState, DeliveryStatus
from states.order_states import OrderStatus


async def main_menu_taxi(message: types.Message):
    taxi_id = message.chat.id
    taxi = await get_taxi(taxi_id)
    free_taxis_count = get_free_taxis_count()

    # –ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Ç–∞–∫—Å–∏—Å—Ç–∞
    order = get_order_by_taxi_id(taxi_id)

    if order:
        user = await get_user(order.user_id)
        cost = "–ñ–¥–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è" if order.cost is None else f"{order.cost} —Ä—É–±"

        # –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–∫–∞–∑–µ
        if order.status == OrderStatus.ACCEPTED:
            expectation_button = get_expectation_button(order.id)
            button = expectation_button
        elif order.status in [OrderStatus.EXPECTATION]:
            start_trip_button = get_start_trip_button(order.id)
            button = start_trip_button
        elif order.status in [OrderStatus.TRIP]:
            end_trip_button = get_end_trip_button(order.id)
            button = end_trip_button
        else:
            button = None

        response = await message.answer(f"üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ ‚Ññ {order.id}:\n\n\n"
                                        f"üü¢ <b>–ê–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</b> {order.first_address}\n\n"
                                        f"üî¥ <b>–ê–¥—Ä–µ—Å –ø—Ä–∏–±—ã—Ç–∏—è:</b> {order.second_address}\n\n\n"
                                        f"üë•Ô∏è <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤:</b> {order.count_passanger}\n\n"
                                        f"üôã‚Äç‚ôÇÔ∏è <b>–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞:</b> {user.name}\n\n"
                                        f"üì± <b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞:</b> {'+'+user.phone}\n\n\n"
                                        f"üí∞ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> {cost}\n\n"
                                        f"üíµ <b>–û–ø–ª–∞—Ç–∞:</b> {order.payment_method}\n\n"
                                        f"üë∂ <b>–î–µ—Ç—Å–∫–æ–µ –∫—Ä–µ—Å–ª–æ:</b> {order.child_seat}\n\n\n"
                                        f"üí≠ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É: <b>{order.comment}</b>", reply_markup=button,
                                        parse_mode='html')
        sent_item = await create_sent_item(order)
        await update_sent_item(sent_item, text_message_id=response.message_id)
    
    else:
        delivery = get_delivery_by_taxi_id(taxi_id)

        if delivery:
            user = await get_user(delivery.user_id)
            cost = "–ñ–¥–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è" if delivery.cost is None else f"{delivery.cost} —Ä—É–±"

            # –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–∫–∞–∑–µ
            if delivery.status == DeliveryStatus.ACCEPTED:
                package_button = get_delivery_package_button(delivery.id)
                button = package_button
            elif delivery.status in [DeliveryStatus.GET_PACKAGE]:
                leaving_button = get_leaving_with_package_button(delivery.id)
                button = leaving_button
            elif delivery.status in [DeliveryStatus.LEAVING]:
                in_place_button = in_place_button(delivery.id)
                button = in_place_button
            else:
                button = None

            package_price = f"üí∞ <b>–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –ø–æ—Å—ã–ª–∫–∞:</b> {delivery.package_price}\n\n" if delivery.package_price else ""
            response = await message.answer(f"üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ ‚Ññ{delivery.id}:\n\n\n" \
                    f"üÖ∞Ô∏è <b>–ê–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</b> {delivery.first_address}\n\n" \
                    f"üÖ±Ô∏è <b>–ê–¥—Ä–µ—Å –ø—Ä–∏–±—ã—Ç–∏—è:</b> {delivery.second_address}\n\n\n" \
                    f"üôã‚Äç‚ôÇÔ∏è <b>–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞:</b> {user.name}\n\n" \
                    f"üì± <b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞:</b> {user.phone}\n\n\n" \
                    f"üí∞ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> {cost}\n\n" \
                    f"üíµ <b>–û–ø–ª–∞—Ç–∞:</b> {delivery.payment_method}\n\n" \
                    f"üì¶ <b>–û–ø–ª–∞—Ç–∞ –ø–æ—Å—ã–ª–∫–∏:</b> {delivery.package_payment}\n\n" \
                    f"{package_price}" \
                    f"üíç <b>–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ—Å—ã–ª–∫–∏</b> {delivery.package_content}\n\n" \
                    f"üí≠ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É: <b>{delivery.comment}</b>", reply_markup=button, parse_mode='html')
            sent_item = await delivery_create_sent_item(delivery)
            await update_sent_item(sent_item, text_message_id=response.message_id)

        else:
            # –ï—Å–ª–∏ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤, –≤—ã–≤–æ–¥–∏–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.answer(f"üëã –ü—Ä–∏–≤–µ—Ç, {taxi.name}!\n"
                                f"–£–¥–∞—á–∏ —Å–µ–≥–æ–¥–Ω—è –≤ —Ä–∞–±–æ—Ç–µ! ü§ó\n\n\n"
                                f"üìã –í–∞—à–∞ –ª–∏—á–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞:\n\n\n"
                                f"üìà <b>–í–∞—à —Ä–µ–π—Ç–∏–Ω–≥:</b> {round(taxi.rating, 2)}\n\n"
                                #f"üíµ <b>–í–∞—à –±–∞–ª–∞–Ω—Å:</b> {taxi.balance}\n\n"
                                f"üöñ <b>–ú–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è:</b> {taxi.car}\n\n"
                                f"üé® <b>–¶–≤–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—è:</b> {taxi.color_car}\n\n"
                                f"üé∞ <b>–ì–æ—Å. –ù–æ–º–µ—Ä:</b> {taxi.registration_number}\n\n\n"
                                f"–°–µ–π—á–∞—Å —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–∞—à–∏–Ω: {free_taxis_count}\n\n\n"
                                f"üéâ –í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ <b>{taxi.daily_order_count}</b> –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ –æ–±—â—É—é —Å—É–º–º—É: <b>{taxi.daily_earnings}</b> —Ä—É–±\n"
                                f"üíµ <b>–°—É–º–º–∞ –∑–∞–∫–∞–∑–æ–≤ –∑–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å:</b> {taxi.daily_order_sum} —Ä—É–±",
                                reply_markup=markup_taxi(taxi), parse_mode='html')

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã
            deferred_orders_buttons = get_deferred_orders_buttons(taxi.user_id)
            if deferred_orders_buttons:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
                markup = InlineKeyboardMarkup(row_width=1)
                markup.add(*deferred_orders_buttons)
                await message.answer("‚ùó –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã:", reply_markup=markup)

            delivery_orders_buttons = get_delivery_orders_buttons(taxi.user_id)
            print(delivery_orders_buttons)
            if delivery_orders_buttons:
                markup = InlineKeyboardMarkup(row_width=1)
                markup.add(*delivery_orders_buttons)
                await message.answer("‚ùó –î–æ—Å—Ç–∞–≤–∫–∏:", reply_markup=markup)
