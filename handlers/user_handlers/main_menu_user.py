from aiogram.types import InlineKeyboardMarkup
from database.get_to_db import get_user, has_orders, get_taxi, get_active_orders_by_user_id, get_free_taxis_count, \
 get_deferred_orders_user
from aiogram import types
from keyboards.inline.orders_inline.user_order_inline.cancel_order import determine_cancel_button
from keyboards.inline.user_inline.markup_main import markup_main
from utils.order_detail import calculate_order_details


async def main_menu(message: types.Message):
    user_id = message.chat.id
    user = await get_user(user_id)
    free_taxis_count = get_free_taxis_count()

    if has_orders(user_id):
        # –ï—Å–ª–∏ –µ—Å—Ç—å –∑–∞–∫–∞–∑—ã, –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        orders = await get_active_orders_by_user_id(user_id)
        for order in orders:
            taxi = await get_taxi(order.taxi_id)
            cancel_order = await determine_cancel_button(order)
            cost = "–ñ–¥–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è" if order.cost is None else f"{order.cost} —Ä—É–±"
            # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º –∑–∞–∫–∞–∑–µ
            await message.answer(f"üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ ‚Ññ{order.id}:\n\n\n"
                                 f"üë•Ô∏è <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤:</b> {order.count_passanger}\n\n"
                                 f"üöñ <b>–ú–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è:</b> {taxi.car if taxi else '–≤ –ø–æ–∏—Å–∫–µ'}\n\n"
                                 f"üé® <b>–¶–≤–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—è:</b> {taxi.color_car if taxi else '–≤ –ø–æ–∏—Å–∫–µ'}\n\n"
                                 f"üé∞ <b>–ì–æ—Å. –ù–æ–º–µ—Ä:</b> {taxi.registration_number if taxi else '–≤ –ø–æ–∏—Å–∫–µ'}\n\n\n"
                                 f"üë® <b>–ò–º—è –≤–æ–¥–∏—Ç–µ–ª—è:</b> {taxi.name if taxi else '–≤ –ø–æ–∏—Å–∫–µ'}\n\n"
                                 f"üìà <b>–†–µ–π—Ç–∏–Ω–≥ –≤–æ–¥–∏—Ç–µ–ª—è:</b> {taxi.rating if taxi else '–≤ –ø–æ–∏—Å–∫–µ'}\n\n"
                                 f"üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω –≤–æ–¥–∏—Ç–µ–ª—è:</b> {'+'+taxi.phone if taxi else '–≤ –ø–æ–∏—Å–∫–µ'}\n\n\n"
                                 f"üü¢ <b>–û—Ç–∫—É–¥–∞ –µ–¥–µ–º:</b> {order.first_address}\n\n"
                                 f"üî¥ <b>–ö—É–¥–∞ –µ–¥–µ–º:</b> {order.second_address}\n\n"
                                 f"üë∂ <b>–î–µ—Ç—Å–∫–æ–µ –∫—Ä–µ—Å–ª–æ:</b> {order.child_seat}\n\n"
                                 f"üí∞ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> {cost}\n\n"
                                 f"üíµ <b>–û–ø–ª–∞—Ç–∞:</b> {order.payment_method}\n\n"
                                 f"üí≠ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É: <b>{order.comment}</b>", reply_markup=cancel_order, parse_mode='html')
    else:
        if not user.is_active:
            await message.answer('‚ùåÔ∏è –í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –±—ã–ª–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.')
            return
        # –ï—Å–ª–∏ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤, –≤—ã–≤–æ–¥–∏–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        rating = round(user.rating, 2) if user.rating else "–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –æ—Ü–µ–Ω–æ–∫"
        await message.answer(f"üëã –ü—Ä–∏–≤–µ—Ç, {user.name}!\n\n"
                             f"–ü—É—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è —É –≤–∞—Å –≤—Å–µ –ø–æ–ª—É—á–∏—Ç—Å—è ‚ù§Ô∏è\n\n"
                             f"üìà <b>–í–∞—à —Ä–µ–π—Ç–∏–Ω–≥:</b> {rating}\n\n"
                             f"–°–µ–π—á–∞—Å —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–∞—à–∏–Ω: {free_taxis_count}", parse_mode='html',
                             reply_markup=markup_main())
        deferred_orders_buttons = get_deferred_orders_user(user_id)
        if deferred_orders_buttons:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
            markup = InlineKeyboardMarkup(row_width=1)
            markup.add(*deferred_orders_buttons)
            await message.answer("‚ùó –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã:", reply_markup=markup)
