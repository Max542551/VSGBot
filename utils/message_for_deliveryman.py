from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from database.add_to_db import save_sent_delivery_messages
from database.database import Delivery, Taxi
from database.delite_from_db import remove_taxi
from database.get_to_db import get_blocked_taxis_for_user, get_blocked_users_for_taxi, get_user
from keyboards.inline.orders_inline.time_key import get_time_keyboard
from keyboards.inline.delivery_inline.reply_accept_the_delivery import delivery_acceptance_keyboard
from loader import bot, dp

async def notify_delivery_drivers(order, first_address, second_address):
    print(order.cost)
    print(order.comment)
    user = await get_user(order.user_id)
    cost = "–ñ–¥–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è" if order.cost == None else f"{order.cost} —Ä—É–±"
    # package_payment = "–û–ø–ª–∞—á–µ–Ω–∞" if order.delivery_payment is "delivery_paid" else "–ù–µ –æ–ø–ª–∞—á–µ–Ω–∞"
    rating_pass = round(user.rating, 2) if user.rating else "–ï—â–µ –Ω–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞"
    package_price = f"üí∞ <b>–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –ø–æ—Å—ã–ª–∫–∞:</b> {order.package_price}\n\n" if order.package_price else ""
    message_text = f"‚ùóÔ∏è<b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑</b> #{order.id}\n\n\n" \
                   f"üìà <b>–†–µ–π—Ç–∏–Ω–≥ –∑–∞–∫–∞–∑—á–∏–∫–∞:</b> {rating_pass}\n\n" \
                   f"üì± <b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞:</b> {'+' + user.phone}\n\n\n" \
                   f"üü¢Ô∏è <b>–û—Ç–∫—É–¥–∞:</b> {first_address}\n\n" \
                   f"üî¥ <b>–ö—É–¥–∞:</b> {second_address}\n\n" \
                   f"üí∞ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> {cost}\n\n" \
                   f"üíµ <b>–û–ø–ª–∞—Ç–∞:</b> {order.payment_method}\n\n" \
                   f"üì¶ <b>–û–ø–ª–∞—Ç–∞ –ø–æ—Å—ã–ª–∫–∏:</b> {order.package_payment}\n\n" \
                   f"{package_price}" \
                   f"üíç <b>–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ—Å—ã–ª–∫–∏</b> {order.package_content}\n\n" \
                   f"üí≠ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É: <b>{order.comment}</b>"

    taxis = Taxi.select()
    sent_messages = []

    if order.cost is None:
        accept_keyboard = InlineKeyboardMarkup().add(
            InlineKeyboardButton('üí∞ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ü–µ–Ω—É', callback_data=f'delivery_order_propose_price_{order.id}')
        )
    else:
        accept_keyboard = delivery_acceptance_keyboard(order)

    blocked_taxis = get_blocked_taxis_for_user(order.user_id)

    for taxi in taxis:
        if taxi.user_id in blocked_taxis:
            continue

        blocked_users = get_blocked_users_for_taxi(taxi.user_id)

        if order.user_id in blocked_users:
            continue

        if taxi.delivery_active and not taxi.admin_deactivated:
            if taxi.is_busy:
                try:
                    time_keyboard = await get_time_keyboard(order.id)
                    message = await bot.send_message(chat_id=taxi.user_id, text=message_text,
                                               reply_markup=time_keyboard,
                                               parse_mode='html')
                    sent_messages.append((taxi.user_id, message.message_id))
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–∞–∫—Å–∏—Å—Ç—É {taxi.user_id}: {e}")
            else:
                try:
                    message = await bot.send_message(chat_id=taxi.user_id, text=message_text,
                                                reply_markup=accept_keyboard,
                                                parse_mode='html')
                    sent_messages.append((taxi.user_id, message.message_id))
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–∞–∫—Å–∏—Å—Ç—É {taxi.user_id}: {e}")

                    if "Forbidden: bot was blocked by the user" in str(e):
                        success = remove_taxi(taxi.user_id)
                        if success:
                            print(f"‚úÖ –¢–∞–∫—Å–∏—Å—Ç —Å ID {taxi.user_id} –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
        elif taxi.is_watching:
            try:
                await bot.send_message(chat_id=taxi.user_id, text=f'‚ùóÔ∏è<b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑</b> #{order.id}',
                                 parse_mode='html')
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–∞–∫—Å–∏—Å—Ç—É {taxi.user_id}: {e}")

                if "Forbidden: bot was blocked by the user" in str(e):
                    success = remove_taxi(taxi.user_id)
                    if success:
                        print(f"‚úÖ –¢–∞–∫—Å–∏—Å—Ç —Å ID {taxi.user_id} –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")

    save_sent_delivery_messages(order.id, sent_messages)
